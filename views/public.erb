<script src="<%= js_source(@js_host, @version, 'pusher.js') %>"></script>

<div class="row-fluid">
  <div class="span9">
    <div>
      <a href="/hello?env=<%= @env.name %>" class="btn btn-primary ajax" data-loading-text="Loading...">Trigger (AJAX)</a>

      <div class="btn-group" style="display:inline;">
        <a href="#" id="connect" class="btn">Connect</a>
        <a href="#" id="disconnect" class="btn">Disconnect</a>
      </div>

      <% if @ssl %>
        <%= link_to "SSL off", test_query_string(ssl: false), class: 'btn' %>
      <% else %>
        <%= link_to "SSL on", test_query_string(ssl: true), class: 'btn' %>
      <% end %>

      <span class="label" id="status">-</span>
    </div>

    <h4>Event log</h4>

    <ul class="" id="debug-console"></ul>
  </div>

  <div class="span3">
    <h4>Using version <%= @version %></h4>

    <% if @version >= '1.7.0' %>
    <p>
      Connecting using
      <% if @ssl %>
        <strong>WSS/HTTPS</strong>.
      <% else %>
        <strong>WS/HTTP</strong>.
      <% end %>
    </p>
    <% end %>

    <p>File list:</p>

    <ul>
      <% files(@version).each do |file| %>
        <li><%= link_to file, js_source(@js_host, @version, file) %></li>
      <% end %>
    </ul>

    <div class="versions">
      <h4>Use another version</h4>

      <div class="version-list" style="">
        <% VERSIONS.reverse.each do |v| %>
        <p><a href="/<%= test_query_string(version: v) %>"><%= v %></a></p>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  $(document).ready(function() {
    $('.ajax').click(function() {
      button = $(this)
      button.addClass('disabled')
      $.post(this.href + '&' + Math.random(), null, function() {
        button.removeClass('disabled')
      });
      return false;
    })
    
    var status = function(st) {
      writeLog('status', st)
      $('#status').text(st);
    }

    $('#connect').click(function() {
      pusher.connect();
      return false;
    });

    $('#disconnect').click(function() {
      pusher.disconnect();
      return false;
    });

    var print_message = function(msg) {
      writeLog('message', msg)
    }

    var writeLog = function(type, msg) {
      var elem = $('#debug-console')[0]
      var atBottom = (elem.scrollHeight - elem.scrollTop <= 600)

      var now = moment().format('h:mm:ss');
      $('#debug-console').prepend("<li class="+type+"><span class='label time'>" + now + "</span> <span class='label type "+type+"'>"+type+"</span> " + msg + "</li>")

      // Used for auto scrolling text area
      // if (atBottom) {
      //   elem.scrollTop = elem.scrollHeight
      // }
    }
    
    <% if @version < "1.5.0" %>
    WebSocket.__swfLocation = "/WebSocketMain.swf";
    <% end %>
    
    Pusher.log = function() {
      if (window.console && window.console.log.apply) {
        window.console.log.apply(window.console, arguments);
      }

      var args = Array.prototype.slice.call(arguments);
      writeLog('debug', args.join(' '))
    };

    // Not usually required - used for debugging on multiple environments
    Pusher.host = "<%= @env[:ws_host] %>";
    Pusher.ws_port = <%= @env[:ws_port] %>;
    Pusher.wss_port = <%= @env[:wss_port] %>;
    Pusher.sockjs_host = "<%= @env[:sockjs_host] %>";
    Pusher.sockjs_http_port = <%= @env[:sockjs_http_port] %>;
    Pusher.sockjs_https_port = <%= @env[:sockjs_https_port] %>;

    // Flash fallback logging
    WEB_SOCKET_DEBUG = true;
    
    <% if @version >= '1.7.0' && @ssl %>
    pusher = new Pusher('<%= @env[:key] %>', {
      encrypted: true
    });
    channel = pusher.subscribe('channel');
    channel.bind("event", function(data) {
      print_message(data);
    });
    channel.bind('alert', function(data) {
      alert(data);
    });
    <% elsif @version >= '1.4.0' %>
    pusher = new Pusher('<%= @env[:key] %>');
    channel = pusher.subscribe('channel');
    channel.bind("event", function(data) {
      print_message(data);
    });
    channel.bind('alert', function(data) {
      alert(data);
    });
    <% else %>
    pusher = new Pusher('<%= @env[:key] %>', 'channel');
    pusher.bind("event", function(data) {
      print_message(data);
    });
    pusher.bind('alert', function(data) {
      alert(data);
    });
    <% end %>
    
    <% if @version < '1.9.0' %>
      status('connecting');

      pusher.bind("pusher:connection_established", function() {
        status('connected');
      })
      pusher.bind("connection_established", function() {
        status('connected');
      })

      pusher.bind("pusher:connection_failed", function() {
        status('disconnected')
      })
      pusher.bind("connection_failed", function() {
        status('disconnected')
      })
    <% else %>
      pusher.connection.bind('state_change', function(state) {
        status(state.current)
      })

      // pusher.connection._machine.bind('state_change', function(event) {
      //   writeLog("internal-state", "Internal state machine transitioned from " + event.oldState + " to " + event.newState)
      // })
    <% end %>
  })
</script>
